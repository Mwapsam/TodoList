(()=>{"use strict";var n={426:(n,t,e)=>{e.d(t,{Z:()=>i});var o=e(537),a=e.n(o),r=e(645),s=e.n(r)()(a());s.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&display=swap);"]),s.push([n.id,"body {\n  background-color: #f6f6f6;\n  font-family: 'Roboto', sans-serif;\n  box-sizing: border-box;\n  margin: 0;\n  color: #645f5f;\n}\n\nsection {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.todo {\n  box-shadow: 3px 2px 4px gray;\n}\n\n.todo > div,\n.task {\n  min-width: 400px;\n  max-width: 550px;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid #dcdbdb;\n}\n\n.todo .header {\n  background-color: white;\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.todo .header h1 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 400;\n}\n\n.todo .tasks,\n.todo .add_task {\n  background-color: white;\n}\n\n.todo .add_task,\n.task {\n  padding: 20px;\n}\n\n.task {\n  display: flex;\n  justify-content: space-between;\n  background-color: yellow;\n}\n\n.todo .tasks {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n\ninput,\ninput:focus,\ntextarea:focus,\nselect:focus {\n  border: 0;\n  outline: 0;\n  font-size: 14px;\n  color: cadetblue;\n  line-height: 28px;\n  margin-right: 10px;\n}\n\ninput::placeholder {\n  font-style: italic;\n}\n\n.todo .footer {\n  text-align: center;\n  color: grey;\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n}\n\np {\n  transition: transform 0.5s ease;\n}\n\n.dragStart {\n  opacity: 0.9;\n  /*transform: scale(0.85);*/\n  background-color: white;\n  border: 1px dotted blue;\n}\n\n.depot {\n  /* height: 200px;\n  width: 400px;\n  background-color: yellowgreen;\n  padding: 30px;*/\n  padding: 20px;\n}\n\n.dragSurvol {\n  background-color: thistle;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,yBAAyB;EACzB,iCAAiC;EACjC,sBAAsB;EACtB,SAAS;EACT,cAAc;AAChB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;;EAEE,gBAAgB;EAChB,gBAAgB;EAChB,aAAa;EACb,8BAA8B;EAC9B,gCAAgC;AAClC;;AAEA;EACE,uBAAuB;EACvB,aAAa;EACb,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,SAAS;EACT,eAAe;EACf,gBAAgB;AAClB;;AAEA;;EAEE,uBAAuB;AACzB;;AAEA;;EAEE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,wBAAwB;AAC1B;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;AACzB;;AAEA;;;;EAIE,SAAS;EACT,UAAU;EACV,eAAe;EACf,gBAAgB;EAChB,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,aAAa;EACb,uBAAuB;EACvB,aAAa;AACf;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,YAAY;EACZ,0BAA0B;EAC1B,uBAAuB;EACvB,uBAAuB;AACzB;;AAEA;EACE;;;iBAGe;EACf,aAAa;AACf;;AAEA;EACE,yBAAyB;AAC3B",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n\nbody {\n  background-color: #f6f6f6;\n  font-family: 'Roboto', sans-serif;\n  box-sizing: border-box;\n  margin: 0;\n  color: #645f5f;\n}\n\nsection {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.todo {\n  box-shadow: 3px 2px 4px gray;\n}\n\n.todo > div,\n.task {\n  min-width: 400px;\n  max-width: 550px;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid #dcdbdb;\n}\n\n.todo .header {\n  background-color: white;\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.todo .header h1 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 400;\n}\n\n.todo .tasks,\n.todo .add_task {\n  background-color: white;\n}\n\n.todo .add_task,\n.task {\n  padding: 20px;\n}\n\n.task {\n  display: flex;\n  justify-content: space-between;\n  background-color: yellow;\n}\n\n.todo .tasks {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n\ninput,\ninput:focus,\ntextarea:focus,\nselect:focus {\n  border: 0;\n  outline: 0;\n  font-size: 14px;\n  color: cadetblue;\n  line-height: 28px;\n  margin-right: 10px;\n}\n\ninput::placeholder {\n  font-style: italic;\n}\n\n.todo .footer {\n  text-align: center;\n  color: grey;\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n}\n\np {\n  transition: transform 0.5s ease;\n}\n\n.dragStart {\n  opacity: 0.9;\n  /*transform: scale(0.85);*/\n  background-color: white;\n  border: 1px dotted blue;\n}\n\n.depot {\n  /* height: 200px;\n  width: 400px;\n  background-color: yellowgreen;\n  padding: 30px;*/\n  padding: 20px;\n}\n\n.dragSurvol {\n  background-color: thistle;\n}\n"],sourceRoot:""}]);const i=s},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(o)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(s[d]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);o&&s[A[0]]||(void 0!==r&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=r),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),t.push(A))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */"),s=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(s).concat([r]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var r={},s=[],i=0;i<n.length;i++){var d=n[i],c=o.base?d[0]+o.base:d[0],A=r[c]||0,l="".concat(c," ").concat(A);r[c]=A+1;var p=e(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var f=a(u,o);o.byIndex=i,t.splice(i,0,{identifier:l,updater:f,references:1})}s.push(l)}return s}function a(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var s=0;s<r.length;s++){var i=e(r[s]);t[i].references--}for(var d=o(n,a),c=0;c<r.length;c++){var A=e(r[c]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}r=d}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,a&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(o){var a=t[o];if(void 0!==a)return a.exports;var r=t[o]={id:o,exports:{}};return n[o](r,r.exports,e),r.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n=e(379),t=e.n(n),o=e(795),a=e.n(o),r=e(569),s=e.n(r),i=e(565),d=e.n(i),c=e(216),A=e.n(c),l=e(589),p=e.n(l),u=e(426),f={};f.styleTagTransform=p(),f.setAttributes=d(),f.insert=s().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=A(),t()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;class g{constructor(n,t,e){this.index=n,this.description=t,this.completed=e}}function E(n,t){return n.classList?n.classList.contains(t):!!n.className.match(new RegExp("(\\s|^)"+t+"(\\s|$)"))}function h(n,t){n.classList?n.classList.add(t):E(n,t)||(n.className+=" "+t)}function v(n,t){if(n.classList)n.classList.remove(t);else if(E(n,t)){var e=new RegExp("(\\s|^)"+t+"(\\s|$)");n.className=n.className.replace(e," ")}}const x=n=>document.querySelector(n);let m=[new g(1,"one","ok"),new g(2,"two","ok"),new g(4,"four","ok"),new g(3,"three","ok"),new g(5,"five","ok")];m=m.sort(((n,t)=>n.index-t.index));let b=x("#two");b.addEventListener("dragstart",S),b.addEventListener("dragend",L);let C=x("#three");C.addEventListener("dragstart",S),C.addEventListener("dragend",L);let B=x("#one");B.addEventListener("dragstart",S),B.addEventListener("dragend",L);let y=x("#four");y.addEventListener("dragstart",S),y.addEventListener("dragend",L);let w=x("#five");w.addEventListener("dragstart",S),w.addEventListener("dragend",L);let k=x(".test");function S(n){h(n.target,"dragStart"),n.dataTransfer.setData("tex/html",n.target.id)}function L(n){v(n.target,"dragStart")}k.addEventListener("dragstart",S),k.addEventListener("dragend",L),document.querySelectorAll(".task").forEach((n=>{}));let j,T=document.querySelector(".depot");T.addEventListener("dragenter",(function(n){h(n.target,"dragSurvol")}),!1,!1,!1,!1,!1),T.addEventListener("dragleave",(function(n){n.target,v(n.target,"dragSurvol")}),!1,!1,!1,!1,!1),T.addEventListener("dragover",(function(n){E(n.target,"task")&&(j=n.target),n.preventDefault()}),!1,!1,!1,!1,!1),T.addEventListener("drop",(function(n){if(!n.currentTarget.contains(n.relatedTarget))if("depot"==n.target.id)console.log("CAS E");else{let t=n.dataTransfer,e=x("#"+t.getData("tex/html")),o=document.querySelectorAll(".task");if(e.dataset.position-j.dataset.position==1){let n=e.dataset.position;j.before(e),e.dataset.position=j.dataset.position,j.dataset.position=n}else if(e.dataset.position-j.dataset.position==-1){j.after(e);let n=e.dataset.position;e.dataset.position=j.dataset.position,j.dataset.position=n}else if(e.dataset.position-j.dataset.position>1){let n=j.dataset.position,t=e.dataset.position;j.before(e);for(let a=0;a<o.length;a++){let r=o[a],s=r.dataset.position;if(n<=s&&s<=t)if(r.id==e.id)r.dataset.position=n;else{let n=Number.parseInt(s)+1;r.dataset.position=n}}}else if(e.dataset.position-j.dataset.position<1){let n=j.dataset.position,t=e.dataset.position;j.after(e);for(let a=0;a<o.length;a++){let r=o[a],s=r.dataset.position;if(t<=s&&s<=n)if(r.id==e.id)r.dataset.position=n;else{let n=Number.parseInt(s)-1;r.dataset.position=n}}}v(j,"dragSurvol")}}),!1,!1,!1,!1,!1)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,