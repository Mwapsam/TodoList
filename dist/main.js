(()=>{"use strict";var t={426:(t,n,e)=>{e.d(n,{Z:()=>r});var a=e(537),s=e.n(a),o=e(645),i=e.n(o)()(s());i.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&display=swap);"]),i.push([t.id,"body {\n  background-color: #f6f6f6;\n  font-family: 'Roboto', sans-serif;\n  box-sizing: border-box;\n  margin: 0;\n  color: #645f5f7a;\n  caret-color: magenta;\n}\n\nsection {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.todo {\n  box-shadow: 3px 2px 4px gray;\n}\n\n.todo > div,\n.task {\n  min-width: 400px;\n  max-width: 550px;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid #dcdbdb;\n}\n\n.todo .header {\n  background-color: white;\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.todo .header h1 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 400;\n  color: #645f5f;\n}\n\n.todo .tasks,\n.todo .add_task {\n  background-color: white;\n}\n\n.todo .add_task,\n.task {\n  padding: 20px;\n}\n\n.completed {\n  text-decoration: line-through;\n}\n\n.task {\n  display: flex;\n  justify-content: space-between;\n  transition: background-color 0.5s ease;\n}\n\n.todo .tasks {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n\ninput,\ninput:focus,\ntextarea:focus,\nselect:focus {\n  border: 0;\n  outline: 0;\n  font-size: 14px;\n  color: cadetblue;\n  line-height: 28px;\n  margin-right: 10px;\n  transition: background-color 0.5s ease;\n}\n\n.tasks input {\n  color: black;\n}\n\n.task:focus-within {\n  background-color: #ffff0052;\n}\n\n.task:focus-within input {\n  background-color: #ffff0008;\n  transition: background-color 0s ease;\n}\n\ninput::placeholder {\n  font-style: italic;\n}\n\n.todo .footer {\n  text-align: center;\n  color: grey;\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,yBAAyB;EACzB,iCAAiC;EACjC,sBAAsB;EACtB,SAAS;EACT,gBAAgB;EAChB,oBAAoB;AACtB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;;EAEE,gBAAgB;EAChB,gBAAgB;EAChB,aAAa;EACb,8BAA8B;EAC9B,gCAAgC;AAClC;;AAEA;EACE,uBAAuB;EACvB,aAAa;EACb,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,SAAS;EACT,eAAe;EACf,gBAAgB;EAChB,cAAc;AAChB;;AAEA;;EAEE,uBAAuB;AACzB;;AAEA;;EAEE,aAAa;AACf;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,sCAAsC;AACxC;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;AACzB;;AAEA;;;;EAIE,SAAS;EACT,UAAU;EACV,eAAe;EACf,gBAAgB;EAChB,iBAAiB;EACjB,kBAAkB;EAClB,sCAAsC;AACxC;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,2BAA2B;EAC3B,oCAAoC;AACtC;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,aAAa;EACb,uBAAuB;EACvB,aAAa;AACf",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n\nbody {\n  background-color: #f6f6f6;\n  font-family: 'Roboto', sans-serif;\n  box-sizing: border-box;\n  margin: 0;\n  color: #645f5f7a;\n  caret-color: magenta;\n}\n\nsection {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.todo {\n  box-shadow: 3px 2px 4px gray;\n}\n\n.todo > div,\n.task {\n  min-width: 400px;\n  max-width: 550px;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid #dcdbdb;\n}\n\n.todo .header {\n  background-color: white;\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.todo .header h1 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 400;\n  color: #645f5f;\n}\n\n.todo .tasks,\n.todo .add_task {\n  background-color: white;\n}\n\n.todo .add_task,\n.task {\n  padding: 20px;\n}\n\n.completed {\n  text-decoration: line-through;\n}\n\n.task {\n  display: flex;\n  justify-content: space-between;\n  transition: background-color 0.5s ease;\n}\n\n.todo .tasks {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n\ninput,\ninput:focus,\ntextarea:focus,\nselect:focus {\n  border: 0;\n  outline: 0;\n  font-size: 14px;\n  color: cadetblue;\n  line-height: 28px;\n  margin-right: 10px;\n  transition: background-color 0.5s ease;\n}\n\n.tasks input {\n  color: black;\n}\n\n.task:focus-within {\n  background-color: #ffff0052;\n}\n\n.task:focus-within input {\n  background-color: #ffff0008;\n  transition: background-color 0s ease;\n}\n\ninput::placeholder {\n  font-style: italic;\n}\n\n.todo .footer {\n  text-align: center;\n  color: grey;\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n}\n"],sourceRoot:""}]);const r=i},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",a=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),a&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),a&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,a,s,o){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(a)for(var r=0;r<this.length;r++){var c=this[r][0];null!=c&&(i[c]=!0)}for(var d=0;d<t.length;d++){var A=[].concat(t[d]);a&&i[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),s&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=s):A[4]="".concat(s)),n.push(A))}},n}},537:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(s," */"),i=e.sources.map((function(t){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(t," */")}));return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}},379:t=>{var n=[];function e(t){for(var e=-1,a=0;a<n.length;a++)if(n[a].identifier===t){e=a;break}return e}function a(t,a){for(var o={},i=[],r=0;r<t.length;r++){var c=t[r],d=a.base?c[0]+a.base:c[0],A=o[d]||0,l="".concat(d," ").concat(A);o[d]=A+1;var u=e(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var f=s(p,a);a.byIndex=r,n.splice(r,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function s(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,s){var o=a(t=t||[],s=s||{});return function(t){t=t||[];for(var i=0;i<o.length;i++){var r=e(o[i]);n[r].references--}for(var c=a(t,s),d=0;d<o.length;d++){var A=e(o[d]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}o=c}}},569:t=>{var n={};t.exports=function(t,e){var a=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var a="";e.supports&&(a+="@supports (".concat(e.supports,") {")),e.media&&(a+="@media ".concat(e.media," {"));var s=void 0!==e.layer;s&&(a+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),a+=e.css,s&&(a+="}"),e.media&&(a+="}"),e.supports&&(a+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(a,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}}},n={};function e(a){var s=n[a];if(void 0!==s)return s.exports;var o=n[a]={id:a,exports:{}};return t[a](o,o.exports,e),o.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var a in n)e.o(n,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:n[a]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),(()=>{var t=e(379),n=e.n(t),a=e(795),s=e.n(a),o=e(569),i=e.n(o),r=e(565),c=e.n(r),d=e(216),A=e.n(d),l=e(589),u=e.n(l),p=e(426),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=s(),f.insertStyleElement=A(),n()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;class h{constructor(t,n,e){this.index=t,this.description=n,this.completed=e}}class k{static save=t=>{localStorage.setItem("tasks",JSON.stringify(t))};static load=()=>null!=localStorage.getItem("tasks")?this.books=JSON.parse(localStorage.getItem("tasks")):[]}class E{static reset=t=>{t.innerHTML=""};static displayTask=(t,n)=>{const e=E.createHtml(t,"div","task");e.dataset.id=n.index;const a=E.createHtml(e,"div","task_input"),s=E.createHtml(a,"input");s.setAttribute("type","checkbox"),s.setAttribute("class",`task_${n.index}_checkbox checkbox_task`),s.id=`checkbox_task_${n.index}`,s.dataset.id=n.index;const o=E.createHtml(a,"input");o.setAttribute("type","text"),o.setAttribute("class",`task_${n.index} input_task`),o.dataset.id=n.index,o.value=n.description,o.id=`input_task_${n.index}`;const i=E.createHtml(e,"i","fas fa-ellipsis-v");i.setAttribute("class","fas fa-trash"),i.id=`task_${n.index}`,i.dataset.id=n.index};static createHtml=(t,n,e,a=null)=>{const s=document.createElement(n);return s.className=e,s.innerHTML=a,t.appendChild(s),s}}const g=t=>document.querySelector(t),x=t=>document.querySelectorAll(t),b=g("input"),C=new class{constructor(){this.tasks=k.load(),console.log(this.tasks)}getTasks=()=>this.tasks.sort(((t,n)=>t.index-n.index));getTask=t=>this.tasks[t-1];addTask=(t,n=!1)=>{const e=new h(this.tasks.length+1,t,n);return this.tasks.push(e),k.save(this.tasks),e};deleteTask=t=>{const n=[],e=t-1;this.tasks.forEach(((t,a)=>{a<e?n.push(t):a>e&&(t.index=a,n.push(t))})),this.tasks=n,k.save(this.tasks)};updateTask=(t,n,e)=>(this.tasks[t-1].description=n,this.tasks[t-1].completed=e,k.save(this.tasks),this.tasks[t-1]);updateStatus=(t,n)=>(class{static updateStatus=(t,n)=>{t.completed=n}}.updateStatus(this.getTask(t),n),k.save(this.tasks),this.getTask(t));clearCompleted=()=>(this.tasks=this.tasks.filter((t=>0==t.completed)),k.save(this.tasks),this.tasks)},m=(t,n,e=!1)=>{("Enter"===t.key||e)&&(C.updateTask(n,g(`.task_${n}`).value,g(`.task_${n}_checkbox`).checked),g(".add_task input").focus())},v=t=>{C.updateStatus(t,g(`.task_${t}_checkbox`).checked),g(`.task[data-id='${t}'] .input_task`).classList.toggle("completed")},y=()=>{E.reset(g(".tasks")),C.getTasks().forEach((t=>E.displayTask(g(".tasks"),t))),x(".fa-trash").forEach((t=>t.addEventListener("click",(()=>{B(t.dataset.id)})))),x(".input_task").forEach((t=>t.addEventListener("keyup",(n=>{m(n,t.dataset.id)})))),x(".checkbox_task").forEach((t=>t.addEventListener("change",(()=>{v(t.dataset.id)}))))},B=t=>{C.deleteTask(t),y(),x(".input_task").forEach((t=>t.addEventListener("keyup",(n=>{m(n,t.dataset.id)})))),x(".input_task").forEach((t=>t.addEventListener("focusout",(n=>{m(n,t.dataset.id,!0)}))))},w=()=>{const t=C.addTask(b.value);E.displayTask(g(".tasks"),t),b.value="",g(`#task_${t.index}`).addEventListener("click",(()=>{B(t.index)})),g(`#input_task_${t.index}`).addEventListener("keyup",(n=>{m(n,t.index)})),g(`#input_task_${t.index}`).addEventListener("focusout",(n=>{m(n,t.index,!0)})),g(`#checkbox_task_${t.index}`).addEventListener("change",(()=>{v(t.index)})),g(`#input_task_${t.index}`).focus()};g(".footer").addEventListener("click",(()=>{C.clearCompleted(),y()})),b.addEventListener("keyup",(({key:t})=>{"Enter"===t&&w()})),g(".fa-plus").addEventListener("click",(()=>w()))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,